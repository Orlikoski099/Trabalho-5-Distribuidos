# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import protocolo_pb2 as protocolo__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in protocolo_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TravelAgencyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BookTrip = channel.unary_unary(
                '/TravelAgency/BookTrip',
                request_serializer=protocolo__pb2.TripRequest.SerializeToString,
                response_deserializer=protocolo__pb2.TripResponse.FromString,
                _registered_method=True)
        self.CancelBookTrip = channel.unary_unary(
                '/TravelAgency/CancelBookTrip',
                request_serializer=protocolo__pb2.CancelTripRequest.SerializeToString,
                response_deserializer=protocolo__pb2.CancelTripResponse.FromString,
                _registered_method=True)


class TravelAgencyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BookTrip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelBookTrip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TravelAgencyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BookTrip': grpc.unary_unary_rpc_method_handler(
                    servicer.BookTrip,
                    request_deserializer=protocolo__pb2.TripRequest.FromString,
                    response_serializer=protocolo__pb2.TripResponse.SerializeToString,
            ),
            'CancelBookTrip': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelBookTrip,
                    request_deserializer=protocolo__pb2.CancelTripRequest.FromString,
                    response_serializer=protocolo__pb2.CancelTripResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TravelAgency', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('TravelAgency', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TravelAgency(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BookTrip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TravelAgency/BookTrip',
            protocolo__pb2.TripRequest.SerializeToString,
            protocolo__pb2.TripResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelBookTrip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/TravelAgency/CancelBookTrip',
            protocolo__pb2.CancelTripRequest.SerializeToString,
            protocolo__pb2.CancelTripResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class AirlineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BookFlight = channel.unary_unary(
                '/Airline/BookFlight',
                request_serializer=protocolo__pb2.FlightRequest.SerializeToString,
                response_deserializer=protocolo__pb2.FlightResponse.FromString,
                _registered_method=True)
        self.CancelFlight = channel.unary_unary(
                '/Airline/CancelFlight',
                request_serializer=protocolo__pb2.CancelFlightRequest.SerializeToString,
                response_deserializer=protocolo__pb2.CancelFlightResponse.FromString,
                _registered_method=True)


class AirlineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BookFlight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelFlight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AirlineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BookFlight': grpc.unary_unary_rpc_method_handler(
                    servicer.BookFlight,
                    request_deserializer=protocolo__pb2.FlightRequest.FromString,
                    response_serializer=protocolo__pb2.FlightResponse.SerializeToString,
            ),
            'CancelFlight': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelFlight,
                    request_deserializer=protocolo__pb2.CancelFlightRequest.FromString,
                    response_serializer=protocolo__pb2.CancelFlightResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Airline', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Airline', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Airline(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BookFlight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Airline/BookFlight',
            protocolo__pb2.FlightRequest.SerializeToString,
            protocolo__pb2.FlightResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelFlight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Airline/CancelFlight',
            protocolo__pb2.CancelFlightRequest.SerializeToString,
            protocolo__pb2.CancelFlightResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class HotelStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BookHotel = channel.unary_unary(
                '/Hotel/BookHotel',
                request_serializer=protocolo__pb2.HotelRequest.SerializeToString,
                response_deserializer=protocolo__pb2.HotelResponse.FromString,
                _registered_method=True)
        self.CancelHotel = channel.unary_unary(
                '/Hotel/CancelHotel',
                request_serializer=protocolo__pb2.CancelHotelRequest.SerializeToString,
                response_deserializer=protocolo__pb2.CancelHotelResponse.FromString,
                _registered_method=True)


class HotelServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BookHotel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelHotel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HotelServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BookHotel': grpc.unary_unary_rpc_method_handler(
                    servicer.BookHotel,
                    request_deserializer=protocolo__pb2.HotelRequest.FromString,
                    response_serializer=protocolo__pb2.HotelResponse.SerializeToString,
            ),
            'CancelHotel': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelHotel,
                    request_deserializer=protocolo__pb2.CancelHotelRequest.FromString,
                    response_serializer=protocolo__pb2.CancelHotelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Hotel', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Hotel', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Hotel(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BookHotel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Hotel/BookHotel',
            protocolo__pb2.HotelRequest.SerializeToString,
            protocolo__pb2.HotelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelHotel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Hotel/CancelHotel',
            protocolo__pb2.CancelHotelRequest.SerializeToString,
            protocolo__pb2.CancelHotelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class CarRentalStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BookCar = channel.unary_unary(
                '/CarRental/BookCar',
                request_serializer=protocolo__pb2.CarRequest.SerializeToString,
                response_deserializer=protocolo__pb2.CarResponse.FromString,
                _registered_method=True)
        self.CancelCar = channel.unary_unary(
                '/CarRental/CancelCar',
                request_serializer=protocolo__pb2.CancelCarRequest.SerializeToString,
                response_deserializer=protocolo__pb2.CancelCarResponse.FromString,
                _registered_method=True)


class CarRentalServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BookCar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CarRentalServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BookCar': grpc.unary_unary_rpc_method_handler(
                    servicer.BookCar,
                    request_deserializer=protocolo__pb2.CarRequest.FromString,
                    response_serializer=protocolo__pb2.CarResponse.SerializeToString,
            ),
            'CancelCar': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCar,
                    request_deserializer=protocolo__pb2.CancelCarRequest.FromString,
                    response_serializer=protocolo__pb2.CancelCarResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CarRental', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CarRental', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CarRental(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BookCar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CarRental/BookCar',
            protocolo__pb2.CarRequest.SerializeToString,
            protocolo__pb2.CarResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelCar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CarRental/CancelCar',
            protocolo__pb2.CancelCarRequest.SerializeToString,
            protocolo__pb2.CancelCarResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
